%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.61.1 (http://poppler.freedesktop.org)
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 327 208
%%HiResBoundingBox: 0 0 327 208
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font BYKILN+CMMI12
%!FontType1-1.0: BYKILN+CMMI12003.002
12 dict begin
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \(c\) 1997, 2009 American Mathematical Society \(<htt\
p://www.ams.org>\), with Reserved Font Name CMMI12.) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/isFixedPitch false def
/ItalicAngle -14.04 def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /BYKILN+CMMI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [-31 -250 1026 750] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 66 /B put
dup 71 /G put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
F95CB8F8CEBD4396C74A303DCB3A46C281B472F99892DCADA5FC6E4C2524AE72
569652A7D664B73CC839B5405D299F805DA5E9FE5C41F969093CFD7B26C9805B
6EC2DA5C4EA81C285458F5CCCDC02F82AC0E127BDB8F9E0A94383740D13431F8
554EF5B7648E7C56F5F38740D67CB57E0007961013F2F16CDB5BA3F5C1414F66
AECF5AFFA42AA51168B07908FD53D54A2CFEF17624741ECA22F7626685779284
56899ED3A87EB156921AFFE08F658C5379DF758C777CCB51DFBDA39A6D5A2A69
807BC97310A8AF1387EE2FDA7502CA8B30E0EFC7FAD80BB72258DEC47FD78332
55E4D8F5D1A61AE838304729314A25F51E4FB8673BF83C79351B380B310FD338
0D87FEFC7E37267ECD7FEA0A8DA4699DF0F72AD9174190900C6D729D946F8B64
5A8268A19C5D42F5A84460B4716093887CD1B890539E613EB241F2C86C8D4397
112A1AF206CB0E6F454CE0CD1B59AB46C606F65CE422D404FC343518EEFBB8CA
BCDBCCFCB6572DEDE0C0B6CBF25F0E4739238EBED0493408D29DAE5532BD9A3D
4ABAB5A4252BCAE1C81C6911F6C9858336BC04FAC1CD965DB648C01597EA2FA3
EEE4C56CFD401874F218C5CECAF6AB30B0D96E0B87AF46E37486F930AA02F825
D9ED52DEADCD7C6F98AAD61DE1D0C098DEB97AB702A23AED006C2B38A1EE9B11
7AB4C0D7027727E16AC160EB208BEAA39E42CFD40CBF4EFAEE1575F20D4579D3
6715AAC0E09465647D8467684E632BBCB7CE71FFA31404EF873D1AAE33F0E0DD
A40E0093E3234AA28911B0B5B38AF53F78DB26A898D7DA3EA2F34A6696964A77
CE3697EB6F5D744889D4B7D4D4DCDF5189F167E1E33491845BEBC39061040CF7
8D752215BA785BDD940C50D5C01CBCC68CB7A39DDC77DAB296E16498E1D357A5
51A46FE7817CFE8C9A427AA0F5514AAFE14AB68ED9C78848DED05B8027C1DBDC
D8EAD64DFA08EC8B5563922633456B9574C2AE4ED62EB4D2B4383B2151F60536
1E5D01B44521B55CC6617E058FE2E13E80F5C351EA1EBA063CD151C76DCEBB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /BYKILN+CMMI12 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%BeginResource: font BSKCWU+CMSY10
%!FontType1-1.0: BSKCWU+CMSY10003.002
12 dict begin
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \(c\) 1997, 2009 American Mathematical Society \(<htt\
p://www.ams.org>\), with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/isFixedPitch false def
/ItalicAngle -14.04 def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /BSKCWU+CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [-29 -960 1116 775] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /arrowright put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FCC85D7215D6A753D1600581E5546F14F3D65234054555B96FD9B9668401E43D
DAC0F02F812EB053F8E70788172E1CEFDE15EF41FC327A1B4488DC9CE002C7AB
D3F3F73476C713CC9F115984E4E692F942E2B7B0C31BE8E40ABCBDA71B68EC65
9576CD50435DCBFC0FCF66B6B1A59C43A1CEDBB8E2B23C02C62E02886B2EA345
C51B0E22860BD89B19F40FE6A64CBC103B28CC542CFC9DCF7965DAE07EA5F142
9C40F87BE010EACE6DA600DA48B29E516AF6FF7626EF6D645DB3A1D89BB83D16
6322E851DF9669F701B330C92390ACF5271FC4E1C2DF5698483760508728EA8F
5793F0F0DCE63F85B166200DF72DE2125F6B7ACF6BCB79304A9FC6FA21F71FB7
06617638588AA966DBF92EFAAAFA53C9E3BC2F5BE69815C25E33E6878EE52682
45F2A1C80DCEECC6AE5A23B394A672E5998AC943C2200CC5578C9DD75139D0EE
BEBF6BC63FFEB62919FF3D5748DDF59E50B008606203EA99C66140D2A560279B
69CBEC2092D19ED832DD6A5A7219450B9B6722D8D9FC602BD8F586D0368FF4BD
155E5BD5FBE8932E54BC6CF8E5C7F3CC7EEB35734EE2BC3460C710456375898F
177719FBE341B061E0BA925CCE198A6A08C8CFBB5226840BA00830B75C590EFD
9BB564
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F9_0 /BSKCWU+CMSY10 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/arrowright/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 327 208 re
W
q
q
[1 0 0 1 -128 -455] cm
q
[1 0 0 1 0 0] cm
0 0 612 792 re
W
q
[1 0 0 1 72 720] cm
q
[1 0 0 1 56.986 -274.466] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0.3985 w
q
Q
q
0 113.38724 m
85.04042 170.08086 l
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
q
[1 0 0 1 56.986 -274.466] cm
[-1 0 0 -1 0 0] cm
q
Q
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 87.379 165.996] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
56.986 -274.466 Td
/F8_0 11.9552 Tf
(B)
[8.893473
0] Tj
Q
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 56.986 -274.466] cm
Q
Q
Q
Q
Q
99.21382 170.08086 m
184.25424 198.42766 l
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
q
[1 0 0 1 56.986 -274.466] cm
[-1 0 0 -1 0 0] cm
q
Q
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 190.845 194.343] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
56.986 -274.466 Td
/F8_0 11.9552 Tf
(B)
[8.893473
0] Tj
Q
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 56.986 -274.466] cm
Q
Q
Q
Q
Q
205.51436 198.42766 m
255.12128 212.60106 l
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
q
[1 0 0 1 56.986 -274.466] cm
[-1 0 0 -1 0 0] cm
q
Q
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 269.35 208.516] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
56.986 -274.466 Td
/F8_0 11.9552 Tf
(B)
[8.893473
0] Tj
69.803 -274.466 Td
/F9_0 11.9552 Tf
(!)
[11.9552
0] Tj
85.079 -274.466 Td
/F8_0 11.9552 Tf
(B)
[8.893473
0] Tj
-50 TJm
(B)
[8.893473
0] Tj
-50 TJm
(B)
[8.893473
0] Tj
Q
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 56.986 -274.466] cm
Q
Q
Q
Q
Q
205.51436 198.42766 m
255.12128 184.25424 l
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
q
[1 0 0 1 56.986 -274.466] cm
[-1 0 0 -1 0 0] cm
q
Q
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 269.613 180.17] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
56.986 -274.466 Td
/F8_0 11.9552 Tf
(G)
[9.234196
0] Tj
69.541 -274.466 Td
/F9_0 11.9552 Tf
(!)
[11.9552
0] Tj
84.817 -274.466 Td
/F8_0 11.9552 Tf
(B)
[8.893473
0] Tj
-50 TJm
(B)
[8.893473
0] Tj
-50 TJm
(G)
[9.234196
0] Tj
Q
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 56.986 -274.466] cm
Q
Q
Q
Q
Q
99.21382 170.08086 m
184.25424 141.73404 l
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
q
[1 0 0 1 56.986 -274.466] cm
[-1 0 0 -1 0 0] cm
q
Q
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 190.976 137.649] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
56.986 -274.466 Td
/F8_0 11.9552 Tf
(G)
[9.234196
0] Tj
Q
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 56.986 -274.466] cm
Q
Q
Q
Q
Q
205.51436 141.73404 m
255.12128 155.90744 l
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
q
[1 0 0 1 56.986 -274.466] cm
[-1 0 0 -1 0 0] cm
q
Q
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 269.481 151.823] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
56.986 -274.466 Td
/F8_0 11.9552 Tf
(B)
[8.893473
0] Tj
69.803 -274.466 Td
/F9_0 11.9552 Tf
(!)
[11.9552
0] Tj
85.079 -274.466 Td
/F8_0 11.9552 Tf
(B)
[8.893473
0] Tj
-50 TJm
(GB)
[9.234196
0
8.893473
0] Tj
Q
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 56.986 -274.466] cm
Q
Q
Q
Q
Q
205.51436 141.73404 m
255.12128 127.56062 l
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
q
[1 0 0 1 56.986 -274.466] cm
[-1 0 0 -1 0 0] cm
q
Q
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 269.744 123.476] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
56.986 -274.466 Td
/F8_0 11.9552 Tf
(G)
[9.234196
0] Tj
69.541 -274.466 Td
/F9_0 11.9552 Tf
(!)
[11.9552
0] Tj
84.817 -274.466 Td
/F8_0 11.9552 Tf
(B)
[8.893473
0] Tj
-50 TJm
(GG)
[9.234196
0
9.234196
0] Tj
Q
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 56.986 -274.466] cm
Q
Q
Q
Q
Q
0 113.38724 m
85.04042 56.69362 l
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
q
[1 0 0 1 56.986 -274.466] cm
[-1 0 0 -1 0 0] cm
q
Q
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 87.51 52.609] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
56.986 -274.466 Td
/F8_0 11.9552 Tf
(G)
[9.234196
0] Tj
Q
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 56.986 -274.466] cm
Q
Q
Q
Q
Q
99.21382 56.69362 m
184.25424 85.04042 l
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
q
[1 0 0 1 56.986 -274.466] cm
[-1 0 0 -1 0 0] cm
q
Q
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 190.845 80.956] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
56.986 -274.466 Td
/F8_0 11.9552 Tf
(B)
[8.893473
0] Tj
Q
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 56.986 -274.466] cm
Q
Q
Q
Q
Q
205.51436 85.04042 m
255.12128 99.21382 l
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
q
[1 0 0 1 56.986 -274.466] cm
[-1 0 0 -1 0 0] cm
q
Q
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 269.481 95.129] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
56.986 -274.466 Td
/F8_0 11.9552 Tf
(B)
[8.893473
0] Tj
69.803 -274.466 Td
/F9_0 11.9552 Tf
(!)
[11.9552
0] Tj
85.079 -274.466 Td
/F8_0 11.9552 Tf
(GB)
[9.234196
0
8.893473
0] Tj
-50 TJm
(B)
[8.893473
0] Tj
Q
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 56.986 -274.466] cm
Q
Q
Q
Q
Q
205.51436 85.04042 m
255.12128 70.867 l
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
q
[1 0 0 1 56.986 -274.466] cm
[-1 0 0 -1 0 0] cm
q
Q
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 269.744 66.782] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
56.986 -274.466 Td
/F8_0 11.9552 Tf
(G)
[9.234196
0] Tj
69.541 -274.466 Td
/F9_0 11.9552 Tf
(!)
[11.9552
0] Tj
84.817 -274.466 Td
/F8_0 11.9552 Tf
(GB)
[9.234196
0
8.893473
0] Tj
-50 TJm
(G)
[9.234196
0] Tj
Q
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 56.986 -274.466] cm
Q
Q
Q
Q
Q
99.21382 56.69362 m
184.25424 28.3468 l
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
q
[1 0 0 1 56.986 -274.466] cm
[-1 0 0 -1 0 0] cm
q
Q
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 190.976 24.262] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
56.986 -274.466 Td
/F8_0 11.9552 Tf
(G)
[9.234196
0] Tj
Q
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 56.986 -274.466] cm
Q
Q
Q
Q
Q
205.51436 28.3468 m
255.12128 42.5202 l
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
q
[1 0 0 1 56.986 -274.466] cm
[-1 0 0 -1 0 0] cm
q
Q
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 269.613 38.435] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
56.986 -274.466 Td
/F8_0 11.9552 Tf
(B)
[8.893473
0] Tj
69.803 -274.466 Td
/F9_0 11.9552 Tf
(!)
[11.9552
0] Tj
85.079 -274.466 Td
/F8_0 11.9552 Tf
(GGB)
[9.234196
0
9.234196
0
8.893473
0] Tj
Q
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 56.986 -274.466] cm
Q
Q
Q
Q
Q
205.51436 28.3468 m
255.12128 14.17339 l
S
q
q
q
[-1 0 0 -1 0 0] cm
q
Q
q
[1 0 0 1 56.986 -274.466] cm
[-1 0 0 -1 0 0] cm
q
Q
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 269.875 10.089] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
56.986 -274.466 Td
/F8_0 11.9552 Tf
(G)
[9.234196
0] Tj
69.541 -274.466 Td
/F9_0 11.9552 Tf
(!)
[11.9552
0] Tj
84.817 -274.466 Td
/F8_0 11.9552 Tf
(GGG)
[9.234196
0
9.234196
0
9.234196
0] Tj
Q
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 56.986 -274.466] cm
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font BYKILN+CMMI12
%%+ font BSKCWU+CMSY10
%%EOF
